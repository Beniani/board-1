{"version":3,"sources":["job.es6"],"names":[],"mappings":";AAAA,gBAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AAqBb,QAAI,IAAI,GAAG,SAAP,IAAI,GAAS,EAAE,CAAC;;AAEpB,QAAI,MAAM,GAAG,SAAT,MAAM,CAAI,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAK;AACzC,YAAI,IAAI,GAAG,WANP,gBAAgB,GAMK,CAAC;;;;;;AAM1B,YAAI,IAAI,GAAG,SAAP,IAAI,CAAI,IAAI,EAAK;AACjB,gBAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,AAAC,IAAI,IAAI,EAAE,CAAE,OAAO,EAAE,CAAC;;AAE5C,gBAAI,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;;AAEnC,mBAAO,CAAC,OAAO,CAAC,UAAC,MAAM,EAAK;AACxB,oBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;;AAGrB,oBAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnB,CAAC,CAAC;SACN,CAAC;;AAEF,oBA1BI,KAAK,EA0BH,MAAM,CAAC,QAAQ,IAAI,EAAE,EAAE,YAAM;AAC/B,gBAAI;AACA,wBAAQ,CAAC,IAAI,CAAC,CAAC;aAClB,CAAC,OAAO,GAAG,EAAE,EACb;SACJ,CAAC,CAAC;;AAEH,gBAAQ,CAAC,IAAI,CAAC,CAAC;KAClB,CAAC;;YAEM,MAAM,GAAN,MAAM","file":"job.amd.js","sourcesContent":["'use strict';\n\n/*\n *  ______                     _________\n *  ___  /_____________ _____________  /\n *  __  __ \\  __ \\  __ `/_  ___/  __  /\n *  _  /_/ / /_/ / /_/ /_  /   / /_/ /\n *  /_.___/\\____/\\__,_/ /_/    \\__,_/\n *      a minimalist dashboard and monitoring solution.\n *\n * This program is distributed under the terms of the MIT license.\n * Please see `LICENSE.md` file for details.\n *\n * Send your comments and suggestions toâ€¦\n * <https://github.com/v0lkan/board/issues>\n */\n\nimport {every} from './runner';\nimport {createPushSocket as createSocket} from './queue';\nimport log from './log';\n\nlet noop = () => {};\n\nlet create = (config, delegate, callback) => {\n    let sock = createSocket();\n\n    // TODO: throw if target not specified.\n    // TODO: throw if target not in config.\n    // callback(new Error(), noop);\n\n    let send = (data) => {\n        data.ts = data.ts || (new Date()).getTime();\n\n        let targets = config.targets || [];\n\n        targets.forEach((target) => {\n            data.target = target;\n\n            //log(`sending:: '${JSON.stringify(data)}'`);\n            sock.send(data);\n        });\n    };\n\n    every(config.interval || 30, () => {\n        try {\n            delegate(send);\n        } catch (err) {\n        }\n    });\n\n    callback(null);\n};\n\nexport {create};\n"]}
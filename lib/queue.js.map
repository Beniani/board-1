{"version":3,"sources":["queue.es6"],"names":[],"mappings":"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","file":"queue.js","sourcesContent":["'use strict';\n\nimport zmq from 'zmq';\n\nimport log from './log';\n\nconst TCP_ENDPOINT = 'tcp://127.0.0.1';\nconst PORT = 4243;\n\nlet createPullSocket = (messageHandler) => {\n    let sock = null;\n\n    let handler = (data) => {\n        messageHandler(data);\n    };\n\n    let disconnect = () => {\n        if (!sock) {return;}\n\n        sock.removeAllListeners();\n        sock.disconnect();\n        sock = null;\n    };\n\n    let connect = () => {\n        sock = zmq.socket('pull');\n\n        if (!sock) {return;}\n\n        sock.connect(`${TCP_ENDPOINT}:${PORT}`, (err) => {\n            if (err) {sock = null;}\n        });\n    };\n\n    let listen = () => {\n        if (!sock) {return;}\n\n        sock.on('error', (err) => {void err;});\n        sock.on('message', (data) => {handler(data);});\n    };\n\n    connect();\n    listen();\n\n    log(`Board:: Message bus [PULL] socket connected to port ${PORT}.`);\n\n    return {\n        disconnect: () => {disconnect();},\n        connect: () => {\n            connect();\n            listen();\n        }\n    };\n};\n\nlet createPushSocket = () => {\n    let sock = null;\n\n    let connect = () => {\n        sock = zmq.socket('push');\n\n        if (!sock) {return;}\n\n        sock.bind(`${TCP_ENDPOINT}:${PORT}`, (err) => {\n            if (err) {sock = null;}\n        });\n    };\n\n    let disconnect = () => {\n        sock.removeAllListeners();\n        sock.unbind();\n        sock = null;\n    };\n\n    let listen = () => {\n        sock.on('error', (err) => {void err;});\n    };\n\n    connect();\n    listen();\n\n    log(`Board:: Message bus [PUSH] socket connected to port ${PORT}.`);\n\n    return {\n        send: (data) => {\n            if (!sock) {return;}\n\n            sock.send(data);\n        },\n        connect: () => {\n            connect();\n            listen();\n        },\n        disconnect: () => {\n            disconnect();\n        }\n    };\n};\n\nexport {createPullSocket, createPushSocket};\n"]}
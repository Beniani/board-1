{"version":3,"sources":["web.es6"],"names":[],"mappings":";AAAA,gBAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBb,QAAM,IAAI,GAAG,IAAI,CAAC;;AAElB,QAAI,GAAG,GAAG,2BAAS,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBpB,OAAG,CAAC,GAAG,CAAC,8BAAc,CAAC,UAzBf,IAAI,EAyBgB,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;;AAEtD,OAAG,CAAC,GAAG,CAAC,aAAa,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;;AAEtC,gBA5BI,gBAAgB,EA4BH,UA7Bb,IAAI,EA6Bc,SAAS,EAAE,sBAAsB,CAAC,CAAC,CAAC,IAAI,CAC1D,GAAG,CACN,CAAC;;KAEL,CAAC,CAAA;;AAEF,OAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC","file":"web.amd.js","sourcesContent":["'use strict';\n\n/*\n *  ______                     _________\n *  ___  /_____________ _____________  /\n *  __  __ \\  __ \\  __ `/_  ___/  __  /\n *  _  /_/ / /_/ / /_/ /_  /   / /_/ /\n *  /_.___/\\____/\\__,_/ /_/    \\__,_/\n *      a minimalist dashboard and monitoring solution.\n *\n * This program is distributed under the terms of the MIT license.\n * Please see `LICENSE.md` file for details.\n *\n * Send your comments and suggestions toâ€¦\n * <https://github.com/v0lkan/board/issues>\n */\n\n// Web server to serve static assets under \"public\";\n// For development only.\n// For production it's recommended to recommended to replace it with\n// NGINX, or HAProxy.\n\nimport express from 'express';\nimport {join} from 'path';\nimport {createReadStream} from 'fs';\nconst PORT = 4244;\n\nlet app = express();\n\n// TODO: use this from node_modules\n// indicate in README that the app expexts X Y Z modules inside the\n// node_modules folder in the project root.\n// Note that you can use `express.static` multiple times in different\n// folders if you need to.\n//\n// subprojects (to clean up this main project)\n//      * v0lkan/board.job --> to run the job files\n//      * v0lkan/board.pipe --> to create a websocket pipe.\n//      * v0lkan/board.static --> for static assets.\n//\n// The final folder structure will be\n//      board\n//              bin\n//              boards\n//              jobs\n//              node_modules\n//              config.json, package.json, README, LICENSE\n//\napp.use(express.static(join(__dirname, '../public')));\n\napp.get('/:boardName', function(req, res) {\n    // TODO: use this from node_modules\n    createReadStream(join(__dirname, '../layout/index.html')).pipe(\n        res\n    );\n    //res.end('hello');\n})\n\napp.listen(PORT);\n"]}